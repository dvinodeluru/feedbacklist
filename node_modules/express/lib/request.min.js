"use strict";function defineGetter(e,r,t){Object.defineProperty(e,r,{configurable:!0,enumerable:!0,get:t})}var accepts=require("accepts"),deprecate=require("depd")("express"),isIP=require("net").isIP,typeis=require("type-is"),http=require("http"),fresh=require("fresh"),parseRange=require("range-parser"),parse=require("parseurl"),proxyaddr=require("proxy-addr"),req=Object.create(http.IncomingMessage.prototype);module.exports=req,req.get=req.header=function(e){if(!e)throw new TypeError("name argument is required to req.get");if("string"!=typeof e)throw new TypeError("name must be a string to req.get");var r=e.toLowerCase();switch(r){case"referer":case"referrer":return this.headers.referrer||this.headers.referer;default:return this.headers[r]}},req.accepts=function(){var e=accepts(this);return e.types.apply(e,arguments)},req.acceptsEncodings=function(){var e=accepts(this);return e.encodings.apply(e,arguments)},req.acceptsEncoding=deprecate["function"](req.acceptsEncodings,"req.acceptsEncoding: Use acceptsEncodings instead"),req.acceptsCharsets=function(){var e=accepts(this);return e.charsets.apply(e,arguments)},req.acceptsCharset=deprecate["function"](req.acceptsCharsets,"req.acceptsCharset: Use acceptsCharsets instead"),req.acceptsLanguages=function(){var e=accepts(this);return e.languages.apply(e,arguments)},req.acceptsLanguage=deprecate["function"](req.acceptsLanguages,"req.acceptsLanguage: Use acceptsLanguages instead"),req.range=function r(e,t){var r=this.get("Range");if(r)return parseRange(e,r,t)},req.param=function(e,r){var t=this.params||{},a=this.body||{},n=this.query||{},s=1===arguments.length?"name":"name, default";return deprecate("req.param("+s+"): Use req.params, req.body, or req.query instead"),null!=t[e]&&t.hasOwnProperty(e)?t[e]:null!=a[e]?a[e]:null!=n[e]?n[e]:r},req.is=function(e){var r=e;if(!Array.isArray(e)){r=new Array(arguments.length);for(var t=0;t<r.length;t++)r[t]=arguments[t]}return typeis(this,r)},defineGetter(req,"protocol",function(){var e=this.connection.encrypted?"https":"http",r=this.app.get("trust proxy fn");return r(this.connection.remoteAddress,0)?(e=this.get("X-Forwarded-Proto")||e,e.split(/\s*,\s*/)[0]):e}),defineGetter(req,"secure",function(){return"https"===this.protocol}),defineGetter(req,"ip",function(){var e=this.app.get("trust proxy fn");return proxyaddr(this,e)}),defineGetter(req,"ips",function(){var e=this.app.get("trust proxy fn"),r=proxyaddr.all(this,e);return r.reverse().pop(),r}),defineGetter(req,"subdomains",function u(){var e=this.hostname;if(!e)return[];var r=this.app.get("subdomain offset"),u=isIP(e)?[e]:e.split(".").reverse();return u.slice(r)}),defineGetter(req,"path",function(){return parse(this).pathname}),defineGetter(req,"hostname",function(){var e=this.app.get("trust proxy fn"),r=this.get("X-Forwarded-Host");if(r&&e(this.connection.remoteAddress,0)||(r=this.get("Host")),r){var t="["===r[0]?r.indexOf("]")+1:0,a=r.indexOf(":",t);return-1!==a?r.substring(0,a):r}}),defineGetter(req,"host",deprecate["function"](function(){return this.hostname},"req.host: Use req.hostname instead")),defineGetter(req,"fresh",function(){var e=this.method,r=this.res,t=r.statusCode;return"GET"!==e&&"HEAD"!==e?!1:t>=200&&300>t||304===t?fresh(this.headers,{etag:r.get("ETag"),"last-modified":r.get("Last-Modified")}):!1}),defineGetter(req,"stale",function(){return!this.fresh}),defineGetter(req,"xhr",function(){var e=this.get("X-Requested-With")||"";return"xmlhttprequest"===e.toLowerCase()});